{"version":3,"file":"static/js/244.d6e697d5.chunk.js","mappings":"uRAEaA,EAAOC,EAAAA,QAAAA,GAAH,oEAEK,qBAAGC,MAAkBC,OAAOC,SAA5B,IAGTC,EAAWJ,EAAAA,QAAAA,GAAH,+EAMRK,EAAOL,EAAAA,QAAAA,EAAH,+C,SCsCjB,EA7CgB,WACd,IAAQM,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,WAAMC,GAAN,iGAEKC,EAAAA,EAAAA,IAAWD,GAFhB,OAEXN,EAFW,OAGjBC,EAAWD,EAAQQ,KAAKC,SACxBN,GAAa,GAJI,gDAMjBO,QAAQC,IAAR,MACAR,GAAa,GAPI,qGAAH,sDAYlBE,EAAaR,EACd,GAAE,CAACA,IAECK,EAIDA,GAEA,SAACZ,EAAD,UACsB,IAAnBU,EAAQY,QACP,yBACE,uBAAG,gDAGLZ,EAAQa,KAAI,gBAAGP,EAAH,EAAGA,GAAIQ,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,UAACpB,EAAD,YACE,wBAAKmB,KACL,SAAClB,EAAD,UAAOmB,MAFMT,EADL,WARpB,GAHS,SAACU,EAAA,EAAD,GAqBV,C,+LC/CDC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAW,mCAAG,8FACZF,EAAAA,EAAAA,IAAU,oBAAqB,CAC1CG,OAAQ,CACNC,QAASH,EACTI,SAAU,WAJW,mFAAH,qDASXC,EAAQ,mCAAG,WAAMjB,GAAN,iFACTW,EAAAA,EAAAA,IAAA,iBAAoBX,GAAM,CACrCc,OAAQ,CACNC,QAASH,KAHS,mFAAH,sDAQRX,EAAU,mCAAG,WAAMD,GAAN,iFACXW,EAAAA,EAAAA,IAAA,iBAAoBX,EAApB,YAAkC,CAC7Cc,OAAQ,CACNE,SAAU,QACVE,KAAM,EACNH,QAASH,KALW,mFAAH,sDAUVO,EAAO,mCAAG,WAAMnB,GAAN,iFACRW,EAAAA,EAAAA,IAAA,iBAAoBX,EAApB,YAAkC,CAC7Cc,OAAQ,CACNE,SAAU,QACVD,QAASH,KAJQ,mFAAH,sDASPQ,EAAY,mCAAG,WAAMC,GAAN,iFACbV,EAAAA,EAAAA,IAAU,gBAAiB,CACtCG,OAAQ,CACNQ,MAAOD,EACPE,eAAe,EACfP,SAAU,QACVE,KAAM,EACNH,QAASH,KAPa,mFAAH,qD","sources":["components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx","services/movieApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding: 20px;\n  background-color: ${({ theme }) => theme.colors.bgAddInfo};\n`;\n\nexport const ListItem = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const Text = styled.p`\n  padding-left: 20px;\n`;\n","import Loader from 'components/Loader';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from '../../services/movieApi';\nimport { List, ListItem, Text } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchReviews = async id => {\n      try {\n        const reviews = await getReviews(id);\n        setReviews(reviews.data.results);\n        setIsLoading(true);\n      } catch (error) {\n        console.log(error);\n        setIsLoading(false);\n      } finally {\n      }\n    };\n\n    fetchReviews(movieId);\n  }, [movieId]);\n\n  if (!isLoading) {\n    return <Loader />;\n  }\n\n  if (isLoading) {\n    return (\n      <List>\n        {reviews.length === 0 ? (\n          <li>\n            <p>We don't have any reviews for this movie.</p>\n          </li>\n        ) : (\n          reviews.map(({ id, author, content }) => (\n            <ListItem key={id}>\n              <h4>{author}</h4>\n              <Text>{content}</Text>\n            </ListItem>\n          ))\n        )}\n      </List>\n    );\n  }\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '80fe24ea6ea4db327f1f3c79898b7ba2';\n\nexport const getTranding = async () => {\n  return await axios.get('/trending/all/day', {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n};\n\nexport const getMovie = async id => {\n  return await axios.get(`/movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const getReviews = async id => {\n  return await axios.get(`/movie/${id}/reviews`, {\n    params: {\n      language: 'en-US',\n      page: 1,\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const getCast = async id => {\n  return await axios.get(`/movie/${id}/credits`, {\n    params: {\n      language: 'en-US',\n      api_key: API_KEY,\n    },\n  });\n};\n\nexport const searchMovies = async searchText => {\n  return await axios.get('/search/movie', {\n    params: {\n      query: searchText,\n      include_adult: false,\n      language: 'en-US',\n      page: 1,\n      api_key: API_KEY,\n    },\n  });\n};\n"],"names":["List","styled","theme","colors","bgAddInfo","ListItem","Text","movieId","useParams","useState","reviews","setReviews","isLoading","setIsLoading","useEffect","fetchReviews","id","getReviews","data","results","console","log","length","map","author","content","Loader","axios","API_KEY","getTranding","params","api_key","language","getMovie","page","getCast","searchMovies","searchText","query","include_adult"],"sourceRoot":""}